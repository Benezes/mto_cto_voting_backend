Using a clean and professional architecture, create a service within the voting app that allows authenticated users to post text content and vote on posts made by other users. Authentication should be implemented using rest_framework_simplejwt to handle user registration and login.

Once authenticated, a user can:

Create a post.

Upvote or downvote posts created by other users (limited to one vote per post).

Edit or delete their own posts.

PS: you can create the models but I'll do the migrations.

in readme document the endpoints, how to call and what should I put in payload


---

in @prompts.txt you should add not replace the inputs that I'm writing.
put an "---" and then what I wrote below

---
I run this postgres container: docker run --name postgres-db -e POSTGRES_DB=postgres -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=123456 -p 5432:5432 -d postgres

in settings apply the conection.
---
When I upvote a post, the value increases by 1, but when I downvote, the value remains at 1 instead of decreasing to 0. The system is not performing the calculation to properly add or subtract the vote value

@views.py 
---
It is still not functioning as expected. The behavior should be similar to that of a post on Reddit. Currently, when I upvote, the vote count increases to 1, and when I downvote, it decreases to -1 instead of resetting to 0
---
implement the corsheaders, because I want to connect with the front end, for now, you can connect with all address: CORS_ALLOW_ALL_ORIGINS = True
---
@README.md document also what should return in api endpoints
